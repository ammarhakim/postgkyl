#!/usr/bin/env python
import click
import numpy

import postgkyl.commands as cmd
from postgkyl.tools.stack import pushStack, pullStack, popStack
from postgkyl.tools.stack import loadFrame, loadHist

@click.group(chain=True)
@click.option('--filename', '-f', multiple=True,
              help='Specify one or more file(s) to work with.')
@click.pass_context
def entry(ctx, filename):
    ctx.obj['files'] = filename
    numSets = len(filename)
    ctx.obj['numSets'] = numSets
    ctx.obj['mapSets'] = slice(numSets)

    ctx.obj['data'] = []
    ctx.obj['labels'] = []

    ctx.obj['coords'] = [[]]
    ctx.obj['values'] = [[]]

    for s in range(numSets):
        if filename[s][-2:] == 'h5' or filename[s][-2:] == 'bp':
            loadFrame(ctx, s, str(filename[s]))
        else:
            loadHist(ctx, s, str(filename[s]))

    ctx.obj['hold'] = False
    ctx.obj['fig'] = ''
    ctx.obj['ax'] = ''

entry.add_command(cmd.info.info)
entry.add_command(cmd.output.plot)
entry.add_command(cmd.output.hold)
entry.add_command(cmd.transform.project)
entry.add_command(cmd.transform.mask)
entry.add_command(cmd.transform.mult)
entry.add_command(cmd.transform.norm)
entry.add_command(cmd.select.fix)
entry.add_command(cmd.select.comp)
entry.add_command(cmd.select.pop)
entry.add_command(cmd.euler.euler)

if __name__ == '__main__':
    entry(obj={})

